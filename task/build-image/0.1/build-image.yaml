apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-image
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.37.0"
    tekton.dev/categories: "Automation"
    tekton.dev/displayName: "build-image"
spec:
  description: |-
    Build image
  params:
    - name: CI
      type: string
    - name: REPO_NAME
      type: string
    - name: REPO_OWNER
      type: string
    - name: BUILD_ID
      type: string
    - name: JOB_NAME
      type: string
    - name: JOB_TYPE
      type: string
    - name: PROW_JOB_ID
      type: string
    - name: PULL_BASE_REF
      type: string
    - name: PULL_BASE_SHA
      type: string
  workspaces:
    - name: artifacts
  resources:
    inputs:
      - name: git
        type: git
        targetPath: go/src/github.com/kyma-project/test-infra
  results:
    - name: built-images
      description: Built images URLs.
  steps:
    - image: "eu.gcr.io/sap-kyma-neighbors-dev/image-builder:v20221031-cc716911e"
      name: "build-image"
      timeout: 20m
      workingDir: "/workspace/go/src/github.com/kyma-project/test-infra"
      command:
        - "/image-builder"
      args:
        - "--name=test-infra/whitesource-scanner"
        - "--config=/config/kaniko-build-config.yaml"
        - "--context=prow/images/whitesource-scanner"
        - "--dockerfile=Dockerfile"
        - "--log-dir=/workspace/artifacts"
      resources:
        requests:
          memory: 400Mi
          cpu: 1
      env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/credentials/sa-kyma-push-images/service-account.json
        - name: CI
          value: $(params.CI)
        - name: REPO_NAME
          value: $(params.REPO_NAME)
        - name: REPO_OWNER
          value: $(params.REPO_OWNER)
        - name: BUILD_ID
          value: $(params.BUILD_ID)
        - name: JOB_TYPE
          value: $(params.JOB_TYPE)
        - name: PULL_BASE_SHA
          value: $(params.PULL_BASE_SHA)
      volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: sa-kyma-push-images
          mountPath: /etc/credentials/sa-kyma-push-images
          readOnly: true
        - name: signify-secret
          mountPath: /secret
          readOnly: true
    - image: alpine
      name: "emit-result"
      script: |
        #!/bin/sh
        
        grep "Successfully built image" /workspace/artifacts | cut -d : -f 2- > $(results.built-images.path)
        
  volumes:
    - name: config
      configMap:
        name: kaniko-build-config
    - name: sa-kyma-push-images
      secret:
        secretName: sa-kyma-push-images
    - name: signify-secret
      secret:
        secretName: signify-dev-secret
